- name: Copy Bitwarden nginx certificate in place
  copy:
    src: "{{ bitwarden_nginx_cert_path }}"
    dest: "{{ bitwarden_install_dir }}/ssl/{{ bitwarden_domain_name }}/certificate.crt"
    remote_src: true
    owner: "{{ bitwarden_user }}"
    group: "{{ bitwarden_group }}"
    mode: "0600"

- name: Copy Bitwarden nginx key in place
  copy:
    src: "{{ bitwarden_nginx_key_path }}"
    dest: "{{ bitwarden_install_dir }}/ssl/{{ bitwarden_domain_name }}/private.key"
    remote_src: true
    owner: "{{ bitwarden_user }}"
    group: "{{ bitwarden_group }}"
    mode: "0600"

- name: Ensure custom values in Bitwarden configuration
  ansible.builtin.lineinfile:
    path: "{{ bitwarden_install_dir }}/config.yml"
    regexp: "^{{ item.key }}:"
    line: "{{ item.key }}: {{ item.value }}"
  loop: "{{ bitwarden_setup_config | dict2items }}"
  register: bw_config

- name: Rebuild Bitwarden if config has changed
  command: ./bitwarden.sh rebuild
  register: bw_rebuild
  args:
    chdir: "{{ bitwarden_user_home }}"
  become_user: "{{ bitwarden_user }}"
  become: true
  when: bw_config.changed
  tags:
    - skip_ansible_lint

- name: Ensure Bitwarden global environment
  ansible.builtin.lineinfile:
    path: "{{ bitwarden_install_dir }}/env/global.override.env"
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  loop: "{{ bitwarden_global_env | dict2items }}"
  no_log: true
  notify: restart bitwarden
